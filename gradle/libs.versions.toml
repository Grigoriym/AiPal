[versions]
compileSdk = "35"
minSdk = "24"
targetSdk = "35"

koin = "3.5.6"
koin-compose-multiplatform = "1.2.0-Beta4"

kotlin = "2.0.20"
kotlin-serialization = "1.7.1"
kotlinxDatetime = "0.6.0"
kotlinxCoroutines = "1.8.1"
atomicfu = "0.24.0"

ktorClientCore = "2.3.12"
okio = "3.9.0"
permissionsCompose = "0.18.0"
uuid = "0.8.4"

agp = "8.6.1"

sqlDelight = "2.0.2"

datastore-prefs = "1.1.1"

compose-bom = "2024.10.01"
compose = "1.5.4"
compose-material3 = "1.3.1"
androidx-activityCompose = "1.9.3"
androidDesugarJdkLibs = "2.1.3"
navigation = "2.8.3"
lifecycle = "2.8.7"
navigationCompose = "2.7.0-alpha07"

jetbrainsLiefcyle = "2.8.0"

accompanist = "0.36.0"

openaiClient = "3.8.2"
tts = "2.5.0"
vosk = "0.3.47"

logging = "1.5.0"
ksp = "2.0.20-1.0.25"
compose-plugin = "1.6.11"

#temp
statelyCommon = "2.0.5"

[libraries]
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose-multiplatform" }
koin-composeVm = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin-compose-multiplatform" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientCore" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClientCore" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissionsCompose" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

androidx-datastore-preferences-core = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "datastore-prefs" }
androidx-datastore-prefs = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore-prefs" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-material-core = { module = "androidx.compose.material:material" }
androidx-compose-material-icons-core = { module = "androidx.compose.material:material-icons-core" }
androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

androidx-lifecycle-runtime-core = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientCore" }
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openaiClient" }
openai-client-bom = { module = "com.aallam.openai:openai-client-bom", version.ref = "openaiClient" }

tts = { module = "nl.marc-apps:tts", version.ref = "tts" }
tts-compose = { module = "nl.marc-apps:tts-compose", version.ref = "tts" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
logging = { module = "org.lighthousegames:logging", version.ref = "logging" }

voskAndroid = { module = "com.alphacephei:vosk-android", version.ref = "vosk" }

jetbrains-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
jetbrains-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "jetbrainsLiefcyle" }
jetbrains-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "jetbrainsLiefcyle" }

#temp
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyCommon" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }